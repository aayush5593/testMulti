apiVersion: v1
data:
  config.yaml: |
    additional_display_details:
    - annotation: kiali.io/api-spec
      icon_annotation: kiali.io/api-type
      title: API Documentation
    auth:
      openid: {}
      openshift:
        client_id_prefix: kiali
      strategy: anonymous
    clustering:
      autodetect_secrets:
        enabled: true
        label: kiali.io/multiCluster=true
      clusters: []
    deployment:
      accessible_namespaces: '[**]'
      additional_service_yaml: {}
      affinity:
        node: {}
        pod: {}
        pod_anti: {}
      cluster_wide_access: true
      configmap_annotations: {}
      custom_envs: []
      custom_secrets: []
      dns:
        config: {}
        policy: ""
      extra_labels: {}
      host_aliases: []
      hpa:
        api_version: autoscaling/v2
        spec: {}
      image_digest: ""
      image_name: quay.io/kiali/kiali
      image_pull_policy: Always
      image_pull_secrets: []
      image_version: v2.10.0
      ingress:
        additional_labels: {}
        class_name: nginx
        override_yaml:
          metadata: {}
      instance_name: kiali
      logger:
        log_format: text
        log_level: info
        sampler_rate: "1"
        time_field_format: 2006-01-02T15:04:05Z07:00
      namespace: istio-system
      node_selector: {}
      pod_annotations:
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      pod_labels: {}
      priority_class_name: ""
      probes:
        liveness:
          initial_delay_seconds: 5
          period_seconds: 30
        readiness:
          initial_delay_seconds: 5
          period_seconds: 30
        startup:
          failure_threshold: 6
          initial_delay_seconds: 30
          period_seconds: 10
      remote_cluster_resources_only: false
      replicas: 1
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 64Mi
      secret_name: kiali
      security_context: {}
      service_annotations: {}
      service_type: ""
      tolerations: []
      topology_spread_constraints: []
      version_label: v2.10.0
      view_only_mode: false
    external_services:
      custom_dashboards:
        enabled: true
      istio:
        root_namespace: istio-system
    identity:
      cert_file: ""
      private_key_file: ""
    istio_namespace: istio-system
    kiali_feature_flags:
      disabled_features: []
      validations:
        ignore:
        - KIA1301
    login_token:
      signing_key: HEbInGTlLqAMEluHoAXiqeaxyzyHR5Tx
    server:
      observability:
        metrics:
          enabled: true
          port: 9090
      port: 20001
      web_root: /kiali
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: kiali
    meta.helm.sh/release-namespace: istio-system
  creationTimestamp: "2025-06-01T16:45:26Z"
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v2.10.0
    helm.sh/chart: kiali-server-2.10.0
    version: v2.10.0
  name: kiali
  namespace: istio-system
  resourceVersion: "43017"
  uid: d0c76b42-1dbc-4bcd-9817-05879576ed50
